{"ast":null,"code":"import { BrowserModule, Title } from '@angular/platform-browser';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { CustomTranslateLoader } from './core/i18n/custom-translate-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport function loaderFactory(http) {\n  return new CustomTranslateLoader(http);\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    constructor(translate) {\n      const saved = localStorage.getItem('lang');\n      const fallback = 'en';\n      const browser = translate.getBrowserLang() || fallback;\n      translate.use(saved || (browser.startsWith('es') ? 'es' : fallback));\n    }\n    static {\n      this.ɵfac = function AppModule_Factory(t) {\n        return new (t || AppModule)(i0.ɵɵinject(i1.TranslateService));\n      };\n    }\n    static {\n      this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n        type: AppModule,\n        bootstrap: [AppComponent]\n      });\n    }\n    static {\n      this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n        providers: [Title],\n        imports: [BrowserModule, HttpClientModule, ReactiveFormsModule, AppRoutingModule, TranslateModule.forRoot({\n          defaultLanguage: 'en',\n          loader: {\n            provide: TranslateLoader,\n            useFactory: loaderFactory,\n            deps: [HttpClient]\n          }\n        })]\n      });\n    }\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}